---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: importing variables
      include_vars: vars/vpc_output_vars
    
    - name: importing vpc variables
      include_vars: vars/vpc_setup

    - name: importing bastion
      include_vars: vars/bastion_setup

    - name: ami images
      include_vars: vars/ec2_ami

    - name: creating key-pair
      amazon.aws.ec2_key:
        name: vprokey      
        region: "{{region}}"
      register: vprokey_out

    - name: storing the key
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./vprokey.pem"
        mode: 0600
      when: vprokey_out.changed

    - name: creating sg for loadbalancer
      amazon.aws.ec2_security_group:
        name: vprofile-lb-sg
        description: This is the sg for the loadbalancer
        vpc_id: "{{vpcid}}"
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
      register: vprosglb_out

    - name: creating sg for ec2 instances
      amazon.aws.ec2_security_group:
        name: vprofile-ec2-sg
        description: This is the sg for the ec2 instance
        vpc_id: "{{vpcid}}"
        region: "{{region}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "{{MYIP}}"
            group_id: "{{vprosglb_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{MYIP}}"
            group_id: "{{bastionsg_out.group_id}}"
      register: vprosg_out

    - name: creating sg for ec2 instances
      amazon.aws.ec2_security_group:
        name: vprofile-ec2-sg
        description: This is the sg for the ec2 instance
        vpc_id: "{{vpcid}}"
        region: "{{region}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vprosg_out.group_id}}"
      
      
